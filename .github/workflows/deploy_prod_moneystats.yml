# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Deploy-PROD
on:
  push:
    branches: [master]

env:
  NODE_VERSION: "22.0.0"
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
  ORGANIZATION_USERNAME: ${{ secrets.ORGANIZATION_USERNAME }}
  DESTINATION_REPOSITORY: ${{ secrets.DESTINATION_REPOSITORY }}
  API_TOKEN: ${{ secrets.API_TOKEN }}
  EMAIL: ${{ secrets.EMAIL }}

jobs:
  checkout-and-setup:
    name: 🔧 Checkout and Setup
    runs-on: ubuntu-latest
    steps:
      - name: "☁️ Checkout Repository"
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: 🔧 Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4.0.2
        with:
          node-version: "${{ env.NODE_VERSION }}"

  dependency-and-build:
    name: 📦 Install and Build
    runs-on: ubuntu-latest
    needs: checkout-and-setup
    steps:
      - uses: actions/checkout@v4
      - name: 📦 Dependency Injection
        run: |
          npm install -g @angular/cli
          npm install --force
      - name: 📂 Build
        run: npm run staging

  docker-login:
    name: 🐳 Docker Login
    runs-on: ubuntu-latest
    needs: dependency-and-build
    steps:
      - name: 🐳 Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    environment:
      name: prod-moneystats-angular
    needs: [dependency-and-build, docker-login]
    steps:
      - uses: actions/checkout@v4

      - name: 🗝️ Grant execute permission to script
        run: chmod +x ./rename.sh

      - name: ✅ Get current package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6.2
        with:
          image: ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}
          tags: ${{ steps.package-version.outputs.current-version}}, latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
          buildArgs: config=prod
          multiPlatform: true
          platform: linux/amd64,linux/arm64

  deploy-github-pages:
    name: 🚀 Deploy on Github Pages
    runs-on: ubuntu-latest
    environment:
      name: prod-moneystats-angular
      url: https://moneystats.github.io
    needs: [dependency-and-build]
    steps:
      - uses: actions/checkout@v4

      - name: ✅ Get current package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: ✏️ Create .env file
        run: |
          echo "BASE_URL=${{ vars.BASE_URL }}" > .env
          echo "EMAIL_SENDER_URL=${{ vars.EMAIL_SENDER_URL }}" >> .env
          echo "PORTFOLIO_DATA_URL=${{ vars.PORTFOLIO_DATA_URL }}" >> .env
          echo "CACHE_ENABLE=${{ vars.CACHE_ENABLE }}" >> .env

      - name: 📂 Build
        run: |
          npm install -g @angular/cli
          npm install --force
          ng build --configuration=production --output-hashing=none --base-href "https://${{ secrets.DESTINATION_REPOSITORY }}"

      - name: 🚀 Pushes to github pages
        uses: cpina/github-action-push-to-another-repository@main
        env:
          name: prod-moneystats-angular
          url: https://moneystats.github.io
          API_TOKEN_GITHUB: ${{ env.API_TOKEN }}
        with:
          commit-message: Portfolio V${{ steps.package-version.outputs.current-version }}
          source-directory: "dist/angular-moneystats"
          destination-github-username: "${{ env.ORGANIZATION_USERNAME }}"
          destination-repository-name: "${{ env.DESTINATION_REPOSITORY }}"
          user-email: ${{ env.EMAIL }}
          target-branch: main
