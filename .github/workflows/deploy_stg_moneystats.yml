name: Deploy-STG

on:
  push:
    branches: [develop]

env:
  NODE_VERSION: "22.0.0"
  DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_REPOSITORY: ${{ vars.DOCKER_REPOSITORY }}

jobs:
  checkout-and-setup:
    name: üîß Checkout and Setup
    runs-on: ubuntu-latest
    steps:
      - name: "‚òÅÔ∏è Checkout Repository"
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: üîß Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4.0.2
        with:
          node-version: "${{ env.NODE_VERSION }}"

  dependency-and-build:
    name: üì¶ Install and Build
    runs-on: ubuntu-latest
    needs: checkout-and-setup
    steps:
      - uses: actions/checkout@v4
      - name: üì¶ Dependency Injection
        run: |
          npm install -g @angular/cli
          npm install --force
      - name: üìÇ Build
        run: npm run staging

  docker-login:
    name: üê≥ Docker Login
    runs-on: ubuntu-latest
    needs: dependency-and-build
    steps:
      - name: üê≥ Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

  deploy:
    name: üöÄ Deploy
    runs-on: ubuntu-latest
    environment:
      name: stg-moneystats-angular
    needs: [dependency-and-build, docker-login]
    steps:
      - uses: actions/checkout@v4

      - name: üóùÔ∏è Grant execute permission to script
        run: chmod +x ./rename.sh

      - name: ‚úèÔ∏è Create .env file
        run: |
          echo "MONEYSTATS_SERVICE_URL=${{ vars.MONEYSTATS_SERVICE_URL }}" > .env
          echo "ACCESS_SPHERE_SERVICE_URL=${{ vars.ACCESS_SPHERE_SERVICE_URL }}" >> .env
          echo "IMAGE_SIZE=${{ vars.IMAGE_SIZE }}" >> .env
          echo "CACHE_ENABLE=${{ vars.CACHE_ENABLE }}" >> .env
          echo "CACHE_TIMEOUT=${{ vars.CACHE_TIMEOUT }}" >> .env

      - name: ‚úÖ Get current package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: üê≥ Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6.4
        with:
          image: ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}
          tags: ${{ steps.package-version.outputs.current-version }}, latest
          buildArgs: config=staging
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
          multiPlatform: true
          #platform: linux/amd64,linux/arm64
          platform: linux/arm64
